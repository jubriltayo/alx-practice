Test cases for 2-say_my_name module

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2,], [3, 4,], [5, 6]])
Traceback (most recent call last):
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([], [[3, 4,], [5, 6]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[3, 4,], [5, 6]], [])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix_mul(4, [[3, 4,], [5, 6]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul([[3, 4,], [5, 6]], 'hello')
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix_mul([[3, 4,], 7], [[1, 2], [5, 6]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [5, 6]], [[3, 4,], 7])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> matrix_mul([[1, 2], [5, 6, 7]], [[3, 4,], [5, 6]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[3, 4,], [5, 6]], [[1, 2], [5, 6, 7]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[3, 4,], [5, 'hello']], [[1, 2], [5, 6]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2], [5, 6]], [[3, 4,], [5, 'hello']])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

